buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
        classpath "org.spongepowered:mixingradle:0.7.+"
    }
}
apply plugin: "net.minecraftforge.gradle"
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: "eclipse"
apply plugin: "org.spongepowered.mixin"

version = project.mod_version + "-forge-" + project.minecraft_suffix
group = project.maven_group
archivesBaseName = project.mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(project.java_target)

println("Java: " + System.getProperty("java.version") + " JVM: " + System.getProperty("java.vm.version") + "(" + System.getProperty("java.vendor") + ") Arch: " + System.getProperty("os.arch"))

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
}

dependencies {
    // Forge
    minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

    // Core library
    implementation fg.deobf("curse.maven:supermartijn642s-core-lib-454372:${project.core_library_file}")
    // Config library
    implementation fg.deobf("curse.maven:supermartijn642s-config-lib-438332:${project.config_library_file}")
}

// Include resources generated by data generators.
sourceSets.main {
    resources.srcDir "src/generated/resources"
    // Make sure resources are available for 1.12
    output.setResourcesDir output.classesDirs.asPath
}

processResources {
    inputs.property "version", project.version

    filesMatching(["mcmod.info", "modid.mixins.json", "pack.mcmeta"]) {
        expand project.properties
    }

    rename "modid.mixins.json", "${project.mod_id}.mixins.json"
    rename "icon.png", "${project.mod_id}.png"
}

minecraft {
    mappings channel: project.mappings_channel, version: project.mappings_version

    // accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"

            mods {
                source sourceSets.main
            }
        }

        server {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"

            mods {
                source sourceSets.main
            }
        }
    }
}